package main.java.ua.edu.ucu.collections.immutable;

// У результаті змін, що призводять на модифікації (зміну стану) колекції має повртатись нова колекція
public interface ImmutableList<T> {

    ImmutableList add(T e); //додає елемент у кінець колекції

    ImmutableList add(int index, T e); //додає елемент до колекції за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції

    ImmutableList addAll(T[] c); //додає масив елементів у кінець колекції

    ImmutableList addAll(int index, T[] c); // додає масив елементів починаючи з зазначеного індекса, та кидає виключну ситуацію, якщо індекс виходить за межі колекції

    T get(int index); //повертає елемент за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції

    ImmutableList remove(int index); //видаляє елемент за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції

    ImmutableList set(int index, T e); //змінює значення елементу за індексом, та кидає виключну ситуацію, якщо індекс виходить за межі колекції

    int indexOf(T e); //шукає індекс елемента (повертає індекс першого який знайшов, або -1 у випадку відсутності)

    int size(); //розмір колекції

    ImmutableList clear(); //очищує вміст колекції

    boolean isEmpty(); //якщо у колеції нема елементів то повертає true

    T[] toArray(); //перетворює колекцію до масиву обєктів

    String toString(); //повертає рядок, де через кому відображаютсься елементи колекції
}
